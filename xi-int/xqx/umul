CallInst:   call void @trap.umul.i32(i32 %nbuf, i32 2), !dbg !30
Name: umul.i32TrapSat.cc:489 
TrapLib::run 
(benchmark notroot39
:logic QF_BV
:extrafuns ((%nbuf BitVec[32]))
:formula
(let (?e1 bv0[1])
(let (?e34 (extract[31:31] %nbuf))
(let (?e35 (concat ?e1 %nbuf))
(let (?e36 bv2[33])
(let (?e37 (bvmul ?e35 ?e36))
(let (?e38 (extract[32:32] ?e37))
(let (?e39 (bvand (bvnot ?e34) (bvnot ?e38)))
(not (= (bvnot ?e39) bv0[1]))
))))))))
Item: ------------------------
Item[cond]:----- 
 (benchmark notroot39
:logic QF_BV
:extrafuns ((%nbuf BitVec[32]))
:formula
(let (?e1 bv0[1])
(let (?e34 (extract[31:31] %nbuf))
(let (?e35 (concat ?e1 %nbuf))
(let (?e36 bv2[33])
(let (?e37 (bvmul ?e35 ?e36))
(let (?e38 (extract[32:32] ?e37))
(let (?e39 (bvand (bvnot ?e34) (bvnot ?e38)))
(not (= (bvnot ?e39) bv0[1]))
))))))))

Item[trap]:---- 
 umul.i32
Item[function]:----- 
 mtest
Item[block]:---- 
 if.else4.split
Item[guard]:---- 
 (benchmark root44
:logic QF_BV
:extrafuns ((%nbuf BitVec[32]))
:formula
(let (?e40 bv0[32])
(let (?e41 (ite (= %nbuf ?e40) bv1[1] bv0[1]))
(let (?e42 bv4294967284[32])
(let (?e43 (ite (= %nbuf (bvnot ?e42)) bv1[1] bv0[1]))
(let (?e44 (bvand (bvnot ?e41) (bvnot ?e43)))
(not (= ?e44 bv0[1]))
))))))

Item[invariant]:---- 
 
Item[model]:---- 
 
Item[status]:---- 
 sat
CallInst: printing a <null> value

CallInst: printing a <null> value

CallInst: printing a <null> value

CallInst:   %call7 = call i32 (...)* @cprintf(i8* getelementptr inbounds ([10 x i8]* @.str2, i32 0, i32 0)), !dbg !31
Name: TrapSat.cc:489 
CallInst: printing a <null> value

